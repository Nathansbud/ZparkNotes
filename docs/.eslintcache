[{"/Users/zackamiton/Code/ZparkNotes/webapp/src/index.tsx":"1","/Users/zackamiton/Code/ZparkNotes/webapp/src/App.tsx":"2","/Users/zackamiton/Code/ZparkNotes/webapp/src/hooks/useKeyPress.tsx":"3"},{"size":155,"mtime":1611572564191,"results":"4","hashOfConfig":"5"},{"size":3830,"mtime":1615156263296,"results":"6","hashOfConfig":"5"},{"size":998,"mtime":1615156332859,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"4kscas",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/zackamiton/Code/ZparkNotes/webapp/src/index.tsx",[],["16","17"],"/Users/zackamiton/Code/ZparkNotes/webapp/src/App.tsx",[],"/Users/zackamiton/Code/ZparkNotes/webapp/src/hooks/useKeyPress.tsx",["18"],"import { useState, useEffect } from 'react';\n\n// Hook\nfunction useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }: KeyboardEvent) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n    // If released key is our target key then set to false\n  const upHandler = ({ key }: KeyboardEvent) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [targetKey]); // rerun the effect if the targetKey changes\n\n  return keyPressed;\n}\n\nexport default useKeyPress;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":31,"column":6,"nodeType":"25","endLine":31,"endColumn":17,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [downHandler, targetKey, upHandler]",{"range":"32","text":"33"},[887,898],"[downHandler, targetKey, upHandler]"]